 
---
title : Multiple MngoDB in Linux under VirtualBox under Windows
author : Mark Nielsen  
copyright : March 2024  
---


Multiple MngoDB in Linux under VirtualBox under Windows
==============================

_**by Mark Nielsen
Original Copyright March 2024**_


1. [Links](#links)
2. [Install Linux](#l)
3. [Setup MngoDB image](#m)
4. [Export MngoDB image](#e)
5. [Import MngoDB image](#i)
6. [Setup Master-Master](#mm)
7. [Future](#f)

Purpose is to install Multiple installations of MngoDB in Linux under VirtualBox running in Windows. To set it up for Mac or Linux is almost trivial.

* * *
<a name=Links></a>Links
-----
* [VirtualBox images](https://www.virtualbox.org/wiki/Downloads)
* [Windows Install Guest Additions](https://www.virtualbox.org/manual/ch04.html#additions-windows)
* [Move VirtualBox VM to other hosts](https://4sysops.com/archives/move-virtualbox-vm-to-other-hosts/#:~:text=If%20you're%20running%20VirtualBox,it%20on%20the%20target%20PC.)
* [Install Cygwin](https://www.cygwin.com/install.html)

* * *
<a name=l>Install Linux</a>
-----

* Setup "node1" described in [Multiple Linux under VirtualBox](https://github.com/vikingdata/articles/blob/main/linux/vm/Multiple_linux_VirtualBox.md)
    * Make sure bidirectional copy and paste is setup.
    * File sharing of c:\vm\shared to /mnt/shared
    * Network is using "Bridged Adapter"

* * *
<a name=m>Setup Mongodb image</a>
-----


* Created mongodb basic image: Copy "node1" to "mongodb1"
    * In Virtual Box, select Import Appliance
    * For File, put in  C:\vm\shared\node1.ova
        * Change settings
        * Name : mongodb1
        * Mac Address Policy : "Generate new"
        * click Finish
* Start mongodb1 and get ip address
  *    # Record this ip address
      * ifconfig | grep inet | head -n1 | sed -e 's/  */ /g' | cut -d ' ' -f3
  * If you prefer to ssh to the system, log in as a normal user and sudo to root.
      * When you have multiple instances, you can have ssh open to each virtual machine under "screen or "tmux".
* Install Percona Mongodb and other programs
    * Start "mongodb1"
    * Sudo to root (this should already be setup)
    * Install software
``` bash
sudo bash

  #Set the hostname to mongodb1
hostnamectl set-hostname mongodb1.myguest.virtualbox.org

name=`hostname| cut -d '.' -f1`
ip=`ifconfig | grep inet | head -n1 | sed -e 's/  */ /g' | cut -d ' ' -f3`
echo "alias $name='ssh $ip -l $SUDO_USER '" >> /mnt/shared/alias_ssh_systems
echo "export $name""_name='$name'" >> /mnt/shared/alias_ssh_systems
echo "export $name""_ip=$ip" >> /mnt/shared/alias_ssh_systems
echo "" >> /mnt/shared/alias_ssh_systems


sudo apt-get install gnupg curl
rm -f /usr/share/keyrings/mongodb-server-7.0.gpg 
curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | \
   sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg \
   --dearmor

   # For jammy, check /etc/lsb-release
echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list

   # If focal
# echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list

   # update ubuntu packages
sudo apt-get update

   # Get the latest
apt-get install -y mongodb-org


   # Make sure stuff starts at boot
systemctl enable ssh
systemctl enable mongod


  # If it did not ask for a password, it will authenicate by auth_socket
  # which you just sudo to root, and it logins automatically
mongosh
```

* Execute these commands in the mongodb shell

```sql
source create_user.sql
-- or make a password count
-- source create_user2.sql

  # Then in mongodb execute
CREATE FUNCTION fnv1a_64 RETURNS INTEGER SONAME 'libfnv1a_udf.so';
CREATE FUNCTION fnv_64 RETURNS INTEGER SONAME 'libfnv_udf.so';
CREATE FUNCTION murmur_hash RETURNS INTEGER SONAME 'libmurmur_udf.so';

exit;

```

* Logout of Mongodb and back to sudo in linux
```bash
wget https://dev.mongodb.com/get/Downloads/Mongodb-Shell/mongodb-shell_8.0.36-1ubuntu22.04_amd64.deb
wget https://dev.mongodb.com/get/Downloads/Mongodb-Router/mongodb-router-community_8.0.36-1ubuntu22.04_amd64.deb

dpkg -i mongodb-shell_8.0.36-1ubuntu22.04_amd64.deb
dpkg -i mongodb-router-community_8.0.36-1ubuntu22.04_amd64.deb

   # Should be root. 
mongodb -e "select USER();"
exit

   # Should be user, for me "mark"
mongodb -e "select USER();"

reboot

exit
```

* * *
<a name=e>Export Mongodb image</a>
-----

* Stop the "mongodb1"
* In Virtual Box under File, select Export Appliance
* Choose the "mongodbd1"
* For Mac Address Policy, choose "Strip all network adapter Max Addresses"
* For file chose : C:\vm\shared\mongodb_base.ova
* Click Next
* Don't change anything on this page.
* Click Finish. Wait until is is done, may take a while.


* * *
<a name=i>Import Mongodb image</a>
-----

To create 3 more images
* for mongodb[l,2,3,4]

Now import the images three times
* In Virtual Box, select Import Appliance
* For File, put in  C:\vm\shared\mongodb_base.ova
* Change settings
    * Name : mongodb2
    * Mac Address Policy : "Generate new"
    * click Finish
* start "mongodb2"
* Login as user and sudo to root
    * sudo bash
* Set the hostname to mongodb1
    * hostnamectl set-hostname mongodb2.myguest.virtualbox.org
* Setup exportes in Linux bash so you can ssh to this box
```bash
hostnamectl set-hostname mongodb2.myguest.virtualbox.org

name=`hostname| cut -d '.' -f1`
ip=`ifconfig | grep inet | head -n1 | sed -e 's/  */ /g' | cut -d ' ' -f3`
echo "alias $name='ssh $ip -l $SUDO_USER '" >> /mnt/shared/alias_ssh_systems
echo "export $name""_name='$name'" >> /mnt/shared/alias_ssh_systems
echo "export $name""_ip=$ip" >> /mnt/shared/alias_ssh_systems
echo "" >> /mnt/shared/alias_ssh_systems

reboot
```

    

* In Virtual Box, select Import Appliance
* For File, put in  C:\vm\shared\mongodb_base.ova
* Change settings
    * Name : mongodb3
    * Mac Address Policy : "Generate new"
    * click Finish
* start "mongodb3"
* Login as user and sudo to root
    * sudo bash
* Set the hostname to mongodb1
    * hostnamectl set-hostname mongodb3.myguest.virtualbox.org
* Setup aliases in Linux bash so you can ssh to this box
```bash

hostnamectl set-hostname mongodb3.myguest.virtualbox.org

name=`hostname| cut -d '.' -f1`
ip=`ifconfig | grep inet | head -n1 | sed -e 's/  */ /g' | cut -d ' ' -f3`
echo "alias $name='ssh $ip -l $SUDO_USER '" >> /mnt/shared/alias_ssh_systems
echo "export $name""_name='$name'" >> /mnt/shared/alias_ssh_systems
echo "export $name""_ip=$ip" >> /mnt/shared/alias_ssh_systems
echo "" >> /mnt/shared/alias_ssh_systems

reboot
```  

* In Virtual Box, select Import Appliance
* For File, put in  C:\vm\shared\mongodb_base.ova
* Change settings
    * Name : mongodb4
    * Mac Address Policy : "Generate new"
    * click Finish
* start "mongodb4"
* Login as user and sudo to root
    * sudo bash
* Set the hostname to mongodb1
    * hostnamectl set-hostname mongodb4.myguest.virtualbox.org
* Setup aliases in Linux bash so you can ssh to this box
```
hostnamectl set-hostname mongodb4.myguest.virtualbox.org

name=`hostname| cut -d '.' -f1`
ip=`ifconfig | grep inet | head -n1 | sed -e 's/  */ /g' | cut -d ' ' -f3`
echo "alias $name='ssh $ip -l $SUDO_USER '" >> /mnt/shared/alias_ssh_systems
echo "export $name""_name='$name'" >> /mnt/shared/alias_ssh_systems
echo "export $name""_ip=$ip" >> /mnt/shared/alias_ssh_systems
echo "" >> /mnt/shared/alias_ssh_systems

reboot
```

Repeat this procedure if you need more images. 


* * *
<a name=main>Maintenance with WSL and cssh</a>
-----

* Start wsl
    * Install wsl
        * [https://github.com/vikingdata/articles/blob/main/databases/mysql/MySQL_under_wsl2.md](https://github.com/vikingdata/articles/blob/main/databases/mongo/MongoDB_under_wsl2.md)
    * wsl --distribution mongodb1
* Setup cssh to connect to all 4 hosts
    * install cssh [https://www.putorius.net/cluster-ssh.html](https://www.putorius.net/cluster-ssh.html)
        * sudo sudo apt-get install clusterssh
    * source /mnt/c/vm/shared/alias_ssh_systems
* Run cluster config commands
```bash
echo "dev root@$mongodb1_ip root@$mongodb2_ip root@$mongodb3_ip root@$mongodb4_ip" >> .clusterssh/clusters
```
* It is assumed you have already transferred your id_rsa.pub to authorized_hosts on each system.
* Connect to each server
```bash
cssh dev
```
* Also, if you created the ssh keys in cygwin, copy your ssh keys to wsl. Change the username for you. This is how I did it. 
```
mkdir -p .ssh
cd .ssh
rsync -av /mnt/c/cygwin64/home/marka/.ssh/id_rsa* .
chmod 600 id_rsa*

```

* * *
<a name=mm>Setup Mongo replica set</a>
-----
* Download these files 
    * [mongodb_vm/mmss/setup_mongodb_mmss.sh](https://raw.githubusercontent.com/vikingdata/articles/main/databases/mongodb/mongodb_vm/mmss/setup_mongodb_mmss.sh)
    * [mongodb_vm/mmss/accounts_mmss.sql](https://raw.githubusercontent.com/vikingdata/articles/main/databases/mongodb/mongodb_vm/mmss/accounts_mmss.sql)
    * [mongodb_vm/mmss/mmss_rep.sh](https://raw.githubusercontent.com/vikingdata/articles/main/databases/mongodb/mongodb_vm/mmss/mmss_rep.sh)
    * [mongodbd_mmss_my.cnf](https://raw.githubusercontent.com/vikingdata/articles/main/databases/mongodb/mongodb_vm/mmss/mongodbd_mmss_my.cnf)
* It is assumed ssh keys to root of each system is setup.
* execute scripts
```bash

wget https://raw.githubusercontent.com/vikingdata/articles/main/databases/mongodb/mongodb_vm/mmss/setup_mongodb_mmss.sh
wget https://raw.githubusercontent.com/vikingdata/articles/main/databases/mongodb/mongodb_vm/mmss/mmss_rep.sh
wget https://raw.githubusercontent.com/vikingdata/articles/main/databases/mongodb/mongodb_vm/mmss/mongodbd_mmss_my.cnf


bash setup_mongodb_mmss.sh
bash mmss_rep.sh

```



* * *
<a name=f>Future</a>
-----

Eventually, Mongodb Group Replication Cluter and Percona Cluster script will be added to this doc. Also, steps to modify for max or Linux host.


TODO artcile: mongo under wsl