
tee q;
 
show open tables where in_use > 0;

SELECT * FROM performance_schema.metadata_locks;

select  t.thread_id as thread_id
  , t.processlist_id as pid
  , t.PROCESSLIST_DB as db
  , t.PROCESSLIST_COMMAND as psql
  , t.PROCESSLIST_STATE as pstate
  , t.PROCESSLIST_INFO as info
  , t.PROCESSLIST_TIME as ptime
  , group_concat(ml.lock_type) as lock_type
from performance_schema.metadata_locks ml
  join performance_schema.threads t on (t.thread_id = ml.owner_thread_id)
  join performance_schema.processlist p on (p.id = t.processlist_id) 

where ml.lock_type in ('INTENTION_EXCLUSIVE', 'SHARED_WRITE', 'SHARED_UPGRADABLE', 'EXCLUSIVE')
group by thread_id, pid, db, psql, pstate, info, time;
;

SELECT TRX_ID
  , TRX_STATE
  ,  trx_mysql_thread_iD AS MID
  ,  trx_tables_locked TL
  , trx_rows_locked as rl
FROM INFORMATION_SCHEMA.INNODB_TRX;

select * from performance_schema.data_locks;

select REQUESTING_ENGINE_TRANSACTION_ID as RTransI
  , REQUESTING_THREAD_ID as RThreadI
  , REQUESTING_EVENT_ID REI
  , BLOCKING_ENGINE_TRANSACTION_ID BTI
  , BLOCKING_THREAD_ID BTI
  , BLOCKING_EVENT_ID BEI
from performance_schema.data_lock_waits;

select  dlw.BLOCKING_THREAD_ID as thread_id1
  , t1.PROCESSLIST_ID as p1
  , t1.PROCESSLIST_INFO as info1
  , ' blocks ' 
  , dlw.REQUESTING_THREAD_ID as thred_id2
  , t2.PROCESSLIST_ID as p2
  , t2.PROCESSLIST_INFO as info2

from performance_schema.data_lock_waits dlw
  join performance_schema.threads t1 on (t1.thread_id = dlw.BLOCKING_THREAD_ID)
  join performance_schema.threads t2 on (t2.thread_id = dlw.REQUESTING_THREAD_ID)
;

use lock_test;
drop temporary table if exists temp_locks;
create temporary table temp_locks select distinct  THREAD_ID from performance_schema.data_locks;

select  dlw.BLOCKING_THREAD_ID as thread_id1
  , t1.PROCESSLIST_ID as p1
  , t1.PROCESSLIST_INFO as info1
  , ' blocks '
  , dlw.REQUESTING_THREAD_ID as thread_id2
  , t2.PROCESSLIST_ID as p2
  , t2.PROCESSLIST_INFO as info2

from temp_locks tl
  join performance_schema.threads t2 on (t2.thread_id = tl.thread_id)
  left join performance_schema.data_lock_waits dlw on (dlw.REQUESTING_THREAD_ID = tl.thread_id)
  left join performance_schema.threads t1 on (t1.thread_id = dlw.BLOCKING_THREAD_ID)

;


select 'missing locks ', t.thread_id, t.processlist_id as pid, t.processlist_info as info
  from information_schema.processlist pl
    join performance_schema.threads t on  (t.processlist_id = pl.id)
    left join performance_schema.data_lock_waits  dlw on (dlw.REQUESTING_THREAD_ID = t.thread_id)
where dlw.engine is Null and pl.state like '%lock%'
;
